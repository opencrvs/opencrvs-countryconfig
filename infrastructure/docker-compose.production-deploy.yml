#
# Production deployments of OpenCRVS should never be exposed to the internet.
# Instead, they should be deployed on a private network and exposed to the internet via a VPN.
#
# Before you deploy staging or production environments, make sure the application servers are
# either in an internal network or protected with a firewall. No ports should be exposed to the internet.
#

services:
  countryconfig:
    image: ${DOCKERHUB_ACCOUNT}/${DOCKERHUB_REPO}:${COUNTRY_CONFIG_VERSION}
    restart: unless-stopped
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - CHECK_INVALID_TOKEN=true
      - SENTRY_DSN=${SENTRY_DSN:-}
      - SENDER_EMAIL_ADDRESS=${SENDER_EMAIL_ADDRESS}
      - ALERT_EMAIL=${ALERT_EMAIL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_SECURE=${SMTP_SECURE}

  traefik:
    # These templates use an Automatic Certificate Management Environment (Let's Encrypt).
    # This makes sure that the HTTPS certificates are automatically generated and renewed without manual maintenance.
    #
    # This default configuration will only work if OpenCRVS is directly accessible from the internet.
    #
    # WE STRONGLY RECOMMEND THAT YOU DO NOT EXPOSE PRODUCTION OPENCRVS TO THE INTERNET!
    #
    # If you are deploying OpenCRVS in a private network, you have two options:
    # 1. Use a DNS provider that supports ACME DNS-01 challenges.
    # 2. Use a manually renewed certificate file.

    # For your country to use the DNS-01 challenge, your domain's DNS provider must be one of the ones listed here
    # https://doc.traefik.io/traefik/https/acme/#providers
    #
    # If your DNS provider is not listed, you can use manually renewed certificate files instead of Let's Encrypt.
    # To do this, remove the `environment` and `certificatesresolvers.certResolver.acme` sections and uncomment the following lines.
    # You will also need to place your certificates in the `/data/traefik/certs` directory.
    # Ensure that the file names match the ones defined below.
    #
    # volumes:
    #   - /var/run/docker.sock:/var/run/docker.sock
    #   - /data/traefik/certs:/certs
    # command:
    #   - --tls.certificates.certfile=/certs/crvs.cm.crt
    #   - --tls.certificates.keyfile=/certs/crvs.cm.key
    #   - --tls.certificates.stores=default
    #   - --tls.stores.default.defaultcertificate.certfile=/certs/crvs.cm.crt
    #   - --tls.stores.default.defaultcertificate.keyfile=/certs/crvs.cm.key

    command:
      - --certificatesresolvers.certResolver.acme.email=riku@opencrvs.org
      - --certificatesresolvers.certResolver.acme.storage=acme.json
      - --certificatesresolvers.certResolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.certResolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.certResolver.acme.httpchallenge=true

      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
      - --providers.docker.swarmMode=true
      - --api.dashboard=true
      - --api.insecure=true
      - --log.level=WARNING
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --serverstransport.insecureskipverify=true
      - --entrypoints.websecure.address=:443
      - --accesslog=true
      - --accesslog.format=json
      - --ping=true
