# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# OpenCRVS is also distributed under the terms of the Civil Registration
# & Healthcare Disclaimer located at http://opencrvs.org/license.
#
# Copyright (C) The OpenCRVS Authors located at https://github.com/opencrvs/opencrvs-core/blob/master/AUTHORS.

# Example IP addressses used in this file:
# 11.11.11.11 - Target staging server's IP address
# 55.55.55.55 - This IP address is both the VPN server the server used as a bastion / jump host
# 66.66.66.66 - This IP address is the address of a backup server

all:
  vars:
    # This configuration variable blocks all access to the server, including SSH, except from the IP addresses specified below.
    # In most cases these should be left empty, as the VPN server should be the only source of traffic.
    # OpenCRVS should never be exposed to the public internet. If this is not possible to organise,
    # then this should always be set when configuring a production server if there is no other firewall in front of the server.
    # BE CAREFUL! This will block all SSH traffic except from the IP addresses listed here.
    only_allow_access_from_addresses:
      # If you are using a jump server to access this environment, place the IP address of the jump server or other explicitly allowed traffic sources here
      #- 55.55.55.55 # example jump server IP address
      []
    # "enable_backups" is set to false on staging.  Staging will not backup it's own data.
    enable_backups: false
    # "periodic_restore_from_backup" restores daily production backups to your staging server.
    # For this you need to first setup a backup environment
    periodic_restore_from_backup: true
    backup_server_remote_source_directory: /home/backup/backups
    users:
      # @todo this is where you define which development team members have access to the server.
      # If you need to remove access from someone, do not remove them from this list, but instead set their state: absent
      - name: my-user
        ssh_keys:
          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABg...Z/rhU= user@example.com
        state: present
        sudoer: true

docker-manager-first:
  hosts:
    staging: # @todo set this to be the hostname of your target server
      ansible_host: '11.11.11.11' # @todo set this to be the hostname of your target server
      data_label: data1
      # If you are using a jump server to access this environment, enter other SSH args here.
      # ansible_ssh_common_args: '-J jump@55.55.55.55 -o StrictHostKeyChecking=no' # @todo set this to be the IP address of your jump server

# This staging servers is configured to only use one server
docker-workers: {}

# For staging server to be able to restore from backups, it needs to have access to the backup server.
# @todo if you do not intend to set up automatic sync from the backup server, you can remove this section.
backups:
  hosts:
    backup: # @todo set this to be the hostname of your backup server
      ansible_host: '66.66.66.66' # set this to be the IP address of your backup server
      # Written by provision pipeline. Assumes "backup" environment
      # exists in Github environments
      ansible_ssh_private_key_file: /tmp/backup_ssh_private_key
# If you are using a jump server to access this environment
# jump:
#   hosts:
#     your-jumpserver-hostname-here: # @todo set this to be the hostname of your backup server
#       ansible_ssh_private_key_file: /tmp/jump_ssh_private_key # Written by provision pipeline. Assumes "jump" environment exists in Github environments
#       ansible_host: '55.55.55.55'
