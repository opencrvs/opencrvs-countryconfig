# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# OpenCRVS is also distributed under the terms of the Civil Registration
# & Healthcare Disclaimer located at http://opencrvs.org/license.
#
# Copyright (C) The OpenCRVS Authors located at https://github.com/opencrvs/opencrvs-core/blob/master/AUTHORS.
services:
  # Configure reverse proxy for public endpoints
  # Note: these published port will override UFW rules as Docker manages it's own iptables
  # Only publish the exact ports that are required for OpenCRVS to work
  traefik:
    image: 'traefik:v2.10'
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/traefik/acme.json:/acme.json
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
      - --providers.docker.swarmMode=true
      - --api.dashboard=true
      - --api.insecure=true
      - --log.level=WARNING
      - --certificatesresolvers.certResolver.acme.email=riku@opencrvs.org
      - --certificatesresolvers.certResolver.acme.storage=acme.json
      - --certificatesresolvers.certResolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.certResolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.certResolver.acme.httpchallenge=true
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --serverstransport.insecureskipverify=true
      - --entrypoints.websecure.address=:443
      - --accesslog=true
      - --accesslog.format=json
      - --ping=true
    deploy:
      replicas: 1
      labels:
        - 'traefik.http.services.traefik.loadbalancer.server.port=80'
        - 'traefik.http.middlewares.gzip-compression.compress=true'
      placement:
        constraints:
          - node.role == manager
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'traefik'
    networks:
      - overlay_net

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.14.3
    user: root
    networks:
      - overlay_net
    configs:
      - source: filebeat.{{ts}}
        target: /usr/share/filebeat/filebeat.yml
      - source: beat-rollover-policy.{{ts}}
        target: /usr/share/filebeat/rollover-policy.json
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers/:/var/lib/docker/containers/:ro
      - /var/log/:/var/log/:ro
    environment:
      - ELASTICSEARCH_HOST=elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_SUPERUSER_PASSWORD}
      - KIBANA_HOST=kibana:5601
    command: ['--strict.perms=false']
    deploy:
      mode: global
      labels:
        - 'traefik.enable=false'

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:8.14.3
    user: root
    cap_add:
      - SYS_PTRACE
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - ELASTICSEARCH_HOST=elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_SUPERUSER_PASSWORD}
      - KIBANA_HOST=kibana:5601
      - KIBANA_USERNAME=${KIBANA_USERNAME}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
      - BEATS_USERNAME=beats_system
      - BEATS_PASSWORD=${ROTATING_METRICBEAT_ELASTIC_PASSWORD}
    command: ['--strict.perms=false', '-system.hostfs=/hostfs']
    hostname: 'metricbeat-{{.Node.Hostname}}'
    restart: always
    deploy:
      mode: global
      labels:
        - 'traefik.enable=false'
    networks:
      - overlay_net
    configs:
      - source: metricbeat-conf.{{ts}}
        target: /usr/share/metricbeat/metricbeat.yml
      - source: beat-rollover-policy.{{ts}}
        target: /usr/share/metricbeat/rollover-policy.json
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'metricbeat'
  setup-kibana-config:
    image: curlimages/curl:7.88.1
    entrypoint:
      [
        'curl',
        '-u',
        'kibana_system:${KIBANA_SYSTEM_PASSWORD}',
        '-X',
        'POST',
        'http://kibana:5601/api/saved_objects/_import?overwrite=true',
        '-H',
        'kbn-xsrf: true',
        '--form',
        'file=@/config.ndjson'
      ]
    restart: on-failure
    volumes:
      # Exceed Docker config file 500 kb file limit, thus a volume mount
      - '/opt/opencrvs/infrastructure/monitoring/kibana/config.ndjson:/config.ndjson'
    networks:
      - overlay_net
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'setup-kibana-config'
  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    restart: always
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.kibana.rule=Host(`kibana.{{hostname}}`)'
        - 'traefik.http.services.kibana.loadbalancer.server.port=5601'
        - 'traefik.http.routers.kibana.tls=true'
        - 'traefik.http.routers.kibana.tls.certresolver=certResolver'
        - 'traefik.http.routers.kibana.entrypoints=web,websecure'
        - 'traefik.docker.network=opencrvs_overlay_net'
        - 'traefik.http.middlewares.traefik.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.traefik.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.traefik.headers.stspreload=true'
    networks:
      - overlay_net
    environment:
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_SYSTEM_PASSWORD}
    configs:
      - source: kibana.{{ts}}
        target: /usr/share/kibana/config/kibana.yml
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'kibana'
  # Configure mongo nodes as a replica set
  mongo1:
    command: mongod --auth --replSet rs0 --keyFile /etc/mongodb-keyfile
    hostname: 'mongo1'
    volumes:
      - '/data/mongo:/data/db'
      - '/mongodb-keyfile:/mongodb-keyfile'
    # https://github.com/docker-library/mongo/issues/475
    entrypoint:
      - bash
      - -c
      - |
        cp /mongodb-keyfile /etc/mongodb-keyfile
        chmod 400 /etc/mongodb-keyfile
        chown 999:999 /etc/mongodb-keyfile
        exec docker-entrypoint.sh $$@
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ADMIN_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ADMIN_PASSWORD}
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=false'
      placement:
        constraints:
          - node.labels.data1 == true
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'mongo1'
  mongo-on-update:
    image: mongo:4.4
    command: bash /on-deploy.sh
    configs:
      - source: mongo-on-deploy.{{ts}}
        target: /on-deploy.sh
    deploy:
      labels:
        - traefik.enable=false
      replicas: 1
      # If this doesn't get run successfully, both the replica set in mongo and
      # the user schema remains uninitialized.
      restart_policy:
        condition: on-failure
        delay: 10s
    environment:
      - REPLICAS=1
      - MONGODB_ADMIN_USER=${MONGODB_ADMIN_USER}
      - MONGODB_ADMIN_PASSWORD=${MONGODB_ADMIN_PASSWORD}
      - USER_MGNT_MONGODB_PASSWORD=${USER_MGNT_MONGODB_PASSWORD}
      - HEARTH_MONGODB_PASSWORD=${HEARTH_MONGODB_PASSWORD}
      - CONFIG_MONGODB_PASSWORD=${CONFIG_MONGODB_PASSWORD}
      - PERFORMANCE_MONGODB_PASSWORD=${PERFORMANCE_MONGODB_PASSWORD}
      - METRICS_MONGODB_PASSWORD=${METRICS_MONGODB_PASSWORD}
      - OPENHIM_MONGODB_PASSWORD=${OPENHIM_MONGODB_PASSWORD}
      - WEBHOOKS_MONGODB_PASSWORD=${WEBHOOKS_MONGODB_PASSWORD}
      - NOTIFICATION_MONGODB_PASSWORD=${NOTIFICATION_MONGODB_PASSWORD}
      - EVENTS_MONGODB_PASSWORD=${EVENTS_MONGODB_PASSWORD}
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'mongo-on-update'
  # Configure redis
  redis:
    networks:
      - overlay_net
    deploy:
      labels:
        - traefik.enable=false
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'redis'
  # Configure elasticsearch
  elasticsearch:
    volumes:
      - '/data/elasticsearch:/usr/share/elasticsearch/data'
      - '/data/backups/elasticsearch:/data/backups/elasticsearch'
    configs:
      - source: jvm-options.{{ts}}
        target: /usr/share/elasticsearch/config/jvm.options.d/jvm.options
    deploy:
      resources:
        limits:
          memory: 8G
      replicas: 1
      labels:
        - 'traefik.enable=false'
      placement:
        constraints:
          - node.labels.data1 == true
    environment:
      - ELASTIC_PASSWORD=${ELASTICSEARCH_SUPERUSER_PASSWORD}
      - path.repo=/data/backups/elasticsearch
      - cluster.name=docker-cluster
      - network.host=0.0.0.0
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'elasticsearch'

  # Configure elasticsearch
  minio:
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_DOMAIN=minio.{{hostname}}
      - MINIO_SERVER_URL=http://minio:9000
      - MINIO_BROWSER_REDIRECT_URL=https://minio-console.{{hostname}}
    volumes:
      - '/data/minio:/data'
    command: server --console-address ":9001" /data
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.data1 == true
      labels:
        - 'traefik.enable=true'
        - 'traefik.docker.network=opencrvs_overlay_net'
        # Console
        - 'traefik.http.routers.minio-console.rule=Host(`minio-console.{{hostname}}`)'
        - 'traefik.http.routers.minio-console.entrypoints=websecure'
        - 'traefik.http.routers.minio-console.tls.certresolver=certResolver'
        - 'traefik.http.routers.minio-console.service=minio-console'
        - 'traefik.http.services.minio-console.loadbalancer.server.port=9001'
        # API
        - 'traefik.http.routers.minio.rule=Host(`minio.{{hostname}}`)'
        - 'traefik.http.routers.minio.entrypoints=websecure,web'
        - 'traefik.http.routers.minio.tls.certresolver=certResolver'
        - 'traefik.http.routers.minio.tls=true'
        - 'traefik.http.routers.minio.service=minio'
        - 'traefik.http.routers.minio.middlewares=minio-https-redirect'
        - 'traefik.http.middlewares.minio-https-redirect.redirectscheme.scheme=https'
        - 'traefik.http.services.minio.loadbalancer.server.port=9000'
    networks:
      - overlay_net

  minio-mc:
    image: minio/mc
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc admin trace --path ocrvs/* minio
      "
    configs:
      - source: minio-mc-config.{{ts}}
        target: /root/.mc/config.json
    networks:
      - overlay_net
    deploy:
      labels:
        - 'traefik.enable=false'
      placement:
        constraints:
          - node.role == manager
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'minio'

  setup-elasticsearch-users:
    image: ubuntu:bionic
    entrypoint: ['bash', '/usr/app/setup.sh']
    restart: on-failure
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTIC_PASSWORD=${ELASTICSEARCH_SUPERUSER_PASSWORD}
      - METRICBEAT_ELASTIC_PASSWORD=${ROTATING_METRICBEAT_ELASTIC_PASSWORD}
      - APM_ELASTIC_PASSWORD=${ROTATING_APM_ELASTIC_PASSWORD}
      - SEARCH_ELASTIC_USERNAME=search-user
      - SEARCH_ELASTIC_PASSWORD=${ROTATING_SEARCH_ELASTIC_PASSWORD}
      - KIBANA_SYSTEM_PASSWORD=${KIBANA_SYSTEM_PASSWORD}
      - KIBANA_USERNAME=${KIBANA_USERNAME}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
    volumes:
      - '/opt/opencrvs/infrastructure/elasticsearch:/usr/app'
    networks:
      - overlay_net
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'setup-elasticsearch-users'
  elastalert:
    image: jertel/elastalert2:2.19.0
    restart: unless-stopped
    environment:
      - ES_USERNAME=elastic
      - ES_PASSWORD=${ELASTICSEARCH_SUPERUSER_PASSWORD}
    volumes:
      - '/opt/opencrvs/infrastructure/monitoring/elastalert/elastalert.yaml:/opt/elastalert/config.yaml'
      - '/opt/opencrvs/infrastructure/monitoring/elastalert/rules:/opt/elastalert/rules'
    networks:
      - overlay_net
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'elastalert'

  logstash:
    image: logstash:8.14.3
    command: logstash -f /etc/logstash/logstash.conf --verbose
    ports:
      - '12201:12201'
      - '12201:12201/udp'
    configs:
      - source: logstash-pipeline.{{ts}}
        target: /etc/logstash/logstash.conf
      - source: logstash.{{ts}}
        target: /usr/share/logstash/config/logstash.yml
    environment:
      - ELASTICSEARCH_SUPERUSER_PASSWORD=${ELASTICSEARCH_SUPERUSER_PASSWORD}
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_SUPERUSER_PASSWORD}
    networks:
      - overlay_net
    restart: always
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.17.22
    cap_add: ['CHOWN', 'DAC_OVERRIDE', 'SETGID', 'SETUID']
    cap_drop: ['ALL']
    restart: always
    networks:
      - overlay_net
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
    command:
      [
        'apm-server',
        '-e',
        '-c',
        'apm-server.yml',
        '-E',
        'output.elasticsearch.username=elastic',
        '-E',
        'output.elasticsearch.password=${ELASTICSEARCH_SUPERUSER_PASSWORD}',
        '-E',
        'kibana.username=${KIBANA_USERNAME}',
        '-E',
        'kibana.password=${KIBANA_PASSWORD}'
      ]
    configs:
      - source: apm.{{ts}}
        target: /usr/share/apm-server/apm-server.yml
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'apm-server'
  # Configure influxdb
  influxdb:
    volumes:
      - '/data/influxdb:/var/lib/influxdb'
      - '/data/backups/influxdb:/data/backups/influxdb'
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=false'
      placement:
        constraints:
          - node.labels.data1 == true
    configs:
      - source: influxdb-conf.{{ts}}
        target: /etc/influxdb/influxdb.conf
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'influxdb'
  # Configure webapps and add traefik config
  client:
    environment:
      - DECLARED_DECLARATION_SEARCH_QUERY_COUNT=100
      - COUNTRY_CONFIG_URL=https://countryconfig.{{hostname}}
      - CONTENT_SECURITY_POLICY_WILDCARD=${CONTENT_SECURITY_POLICY_WILDCARD}
      - MINIO_URL=https://minio.{{hostname}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.client.rule=Host(`register.{{hostname}}`,`{{hostname}}`)'
        - 'traefik.http.routers.client.middlewares=test-replacepathregex,gzip-compression'
        - 'traefik.http.routers.client.service=client'
        - 'traefik.http.services.client.loadbalancer.server.port=80'
        - 'traefik.http.routers.client.tls=true'
        - 'traefik.http.routers.client.tls.certresolver=certResolver'
        - 'traefik.http.routers.client.entrypoints=web,websecure'
        - 'traefik.docker.network=opencrvs_overlay_net'

        - 'traefik.http.middlewares.test-replacepathregex.redirectregex.permanent=true'
        - 'traefik.http.middlewares.test-replacepathregex.redirectregex.regex=^https?://{{hostname}}/(.*)'
        - 'traefik.http.middlewares.test-replacepathregex.redirectregex.replacement=https://register.{{hostname}}/$${1}'

        - 'traefik.http.middlewares.client.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.client.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.client.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.client.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.client.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.client.headers.stspreload=true'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'client'

  countryconfig:
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.countryconfig.rule=(Host(`countryconfig.{{hostname}}`) || Host(`registry.{{hostname}}`)) && !Path(`/email`) && !Path(`/notification`) && !Path(`/dashboards/queries.json`)'
        - 'traefik.http.services.countryconfig.loadbalancer.server.port=3040'
        - 'traefik.http.routers.countryconfig.tls=true'
        - 'traefik.http.routers.countryconfig.tls.certresolver=certResolver'
        - 'traefik.http.routers.countryconfig.entrypoints=web,websecure'
        - 'traefik.http.routers.countryconfig.middlewares=gzip-compression'
        - 'traefik.docker.network=opencrvs_overlay_net'
        - 'traefik.http.middlewares.countryconfig.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.countryconfig.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.countryconfig.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.countryconfig.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.countryconfig.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.countryconfig.headers.stspreload=true'
        # This is an invalid IP range, effectively blocking all IPs from accessing below paths.
        # It's only meant to be accessed from the internal docker network.
        - 'traefik.http.middlewares.block-internal-routes.ipwhitelist.sourcerange=255.255.255.255'
        - 'traefik.http.routers.block-email.rule=Host(`countryconfig.{{hostname}}`) && Path(`/email`)'
        - 'traefik.http.routers.block-email.middlewares=block-internal-routes'
        - 'traefik.http.routers.block-notification.rule=Host(`countryconfig.{{hostname}}`) && Path(`/notification`)'
        - 'traefik.http.routers.block-notification.middlewares=block-internal-routes'
        - 'traefik.http.routers.block-dashboard-queries.rule=Host(`countryconfig.{{hostname}}`) && Path(`/dashboards/queries.json`)'
        - 'traefik.http.routers.block-dashboard-queries.middlewares=block-internal-routes'
      replicas: 1
    environment:
      - NODE_ENV=production
      - FHIR_URL=http://hearth:3447/fhir
      - AUTH_URL=http://auth:4040
      - APPLICATION_CONFIG_URL=http://config:2021
      - CONFIRM_REGISTRATION_URL=http://workflow:5050/confirm/registration
      - MONGO_URL=mongodb://mongo1/user-mgnt?replicaSet=rs0
      - CONFIG_MONGO_URL=mongodb://mongo1/application-config?replicaSet=rs0
      - APN_SERVICE_URL=http://apm-server:8200
      - COUNTRY_CONFIG_URL=https://countryconfig.{{hostname}}
      - LOGIN_URL=https://login.{{hostname}}
      # This needs to be the internal swarm url
      # as containers cannot connect to the web
      - GATEWAY_URL=http://gateway:7070
      - CLIENT_APP_URL=https://register.{{hostname}}
      - NOTIFICATION_TRANSPORT=${NOTIFICATION_TRANSPORT}
      - ALERT_EMAIL=${ALERT_EMAIL:-}
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=${SMTP_PORT:-}
      - SMTP_USERNAME=${SMTP_USERNAME:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - SMTP_SECURE=${SMTP_SECURE:-}
      - INFOBIP_GATEWAY_ENDPOINT=${INFOBIP_GATEWAY_ENDPOINT:-}
      - INFOBIP_API_KEY=${INFOBIP_API_KEY:-}
      - INFOBIP_SENDER_ID=${INFOBIP_SENDER_ID:-}
      - DOMAIN={{hostname}}
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'countryconfig'
  login:
    environment:
      - COUNTRY_CONFIG_URL=https://countryconfig.{{hostname}}
      - CONTENT_SECURITY_POLICY_WILDCARD=${CONTENT_SECURITY_POLICY_WILDCARD}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.login.rule=Host(`login.{{hostname}}`)'
        - 'traefik.http.services.login.loadbalancer.server.port=80'
        - 'traefik.http.routers.login.tls=true'
        - 'traefik.http.routers.login.tls.certresolver=certResolver'
        - 'traefik.http.routers.login.entrypoints=web,websecure'
        - 'traefik.http.routers.login.middlewares=gzip-compression'
        - 'traefik.docker.network=opencrvs_overlay_net'
        - 'traefik.http.middlewares.login.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.login.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.login.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.login.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.login.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.login.headers.stspreload=true'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'login'
  # Configure other service with deployment specifc details
  auth:
    secrets:
      - jwt-public-key.{{ts}}
      - jwt-private-key.{{ts}}
    environment:
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PRIVATE_KEY_PATH=/run/secrets/jwt-private-key.{{ts}}
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - LOGIN_URL=https://login.{{hostname}}
      - COUNTRY_CONFIG_URL=https://countryconfig.{{hostname}}
      - CLIENT_APP_URL=https://register.{{hostname}}
      - DOMAIN={{hostname}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.auth.rule=Host(`auth.{{hostname}}`)'
        - 'traefik.http.services.auth.loadbalancer.server.port=4040'
        - 'traefik.http.routers.auth.tls=true'
        - 'traefik.http.routers.auth.tls.certresolver=certResolver'
        - 'traefik.http.routers.auth.entrypoints=web,websecure'
        - 'traefik.docker.network=opencrvs_overlay_net'
        - 'traefik.http.middlewares.auth.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.auth.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.auth.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.auth.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.auth.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.auth.headers.stspreload=true'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'auth'
  user-mgnt:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - RECORD_SEARCH_QUOTA=2000
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - MONGO_URL=mongodb://user-mgnt:${USER_MGNT_MONGODB_PASSWORD}@mongo1/user-mgnt?replicaSet=rs0
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'user-mgnt'
  events:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - EVENTS_MONGO_URL=mongodb://events:${EVENTS_MONGODB_PASSWORD}@mongo1/events?replicaSet=rs0
      - USER_MGNT_MONGO_URL=mongodb://user-mgnt:${USER_MGNT_MONGODB_PASSWORD}@mongo1/user-mgnt?replicaSet=rs0
      - ES_URL=http://search-user:${ROTATING_SEARCH_ELASTIC_PASSWORD}@elasticsearch:9200
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'events'
  notification:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - LANGUAGES=en,fr
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - MONGO_URL=mongodb://notification:${NOTIFICATION_MONGODB_PASSWORD}@mongo1/notification?replicaSet=rs0
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=false'
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'notification'
  gateway:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - LANGUAGES=en,fr
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - LOGIN_URL=https://login.{{hostname}}
      - CLIENT_APP_URL=https://register.{{hostname}}
      - DOMAIN={{hostname}}
      - COUNTRY=${COUNTRY:-FAR}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.gateway.rule=Host(`gateway.{{hostname}}`)'
        - 'traefik.http.services.gateway.loadbalancer.server.port=7070'
        - 'traefik.http.routers.gateway.tls=true'
        - 'traefik.http.routers.gateway.tls.certresolver=certResolver'
        - 'traefik.http.routers.gateway.entrypoints=web,websecure'
        - 'traefik.http.routers.gateway.middlewares=gzip-compression'
        - 'traefik.docker.network=opencrvs_overlay_net'
        - 'traefik.http.middlewares.gateway.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.gateway.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.gateway.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.gateway.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.gateway.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.gateway.headers.stspreload=true'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'gateway'
  workflow:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - LANGUAGES=en,fr
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'workflow'
  search:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - ES_HOST=search-user:${ROTATING_SEARCH_ELASTIC_PASSWORD}@elasticsearch:9200
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - HEARTH_MONGO_URL=mongodb://hearth:${HEARTH_MONGODB_PASSWORD}@mongo1/hearth-dev?replicaSet=rs0
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'search'
  metrics:
    secrets:
      - jwt-public-key.{{ts}}
    volumes:
      - /data/vsexport:/usr/src/app/packages/metrics/src/scripts
    environment:
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - MONGO_URL=mongodb://metrics:${METRICS_MONGODB_PASSWORD}@mongo1/metrics?replicaSet=rs0
      - HEARTH_MONGO_URL=mongodb://hearth:${HEARTH_MONGODB_PASSWORD}@mongo1/hearth-dev?replicaSet=rs0
      - DASHBOARD_MONGO_URL=mongodb://performance:${PERFORMANCE_MONGODB_PASSWORD}@mongo1/performance?replicaSet=rs0
    deploy:
      placement:
        constraints:
          - node.labels.data1 == true
      labels:
        - 'traefik.enable=false'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'metrics'
  scheduler:
    environment:
      - NODE_ENV=production
      - OPENHIM_MONGO_URL=mongodb://openhim:${OPENHIM_MONGODB_PASSWORD}@mongo1/openhim-dev?replicaSet=rs0
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=false'
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'scheduler'
  documents:
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=false'
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_URL=minio.{{hostname}}
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_BUCKET=ocrvs
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'documents'
  config:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - MONGO_URL=mongodb://config:${CONFIG_MONGODB_PASSWORD}@mongo1/application-config?replicaSet=rs0
      - LOGIN_URL=https://login.{{hostname}}
      - CLIENT_APP_URL=https://register.{{hostname}}
      - DOMAIN={{hostname}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.config.rule=Host(`config.{{hostname}}`) && !Path(`/dashboardQueries`)'
        - 'traefik.http.services.config.loadbalancer.server.port=2021'
        - 'traefik.http.routers.config.tls=true'
        - 'traefik.http.routers.config.tls.certresolver=certResolver'
        - 'traefik.http.routers.config.entrypoints=web,websecure'
        - 'traefik.docker.network=opencrvs_overlay_net'
        - 'traefik.http.middlewares.config.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.config.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.config.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.config.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.config.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.config.headers.stspreload=true'
        - 'traefik.http.middlewares.block-internal-routes.ipwhitelist.sourcerange=255.255.255.255'
        - 'traefik.http.routers.block-dashboard-queries.rule=Host(`countryconfig.{{hostname}}`) && Path(`/dashboardQueries`)'
        - 'traefik.http.routers.block-dashboard-queries.middlewares=block-internal-routes'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'config'
  migration:
    environment:
      - USER_MGNT_MONGO_URL=mongodb://user-mgnt:${USER_MGNT_MONGODB_PASSWORD}@mongo1/user-mgnt?replicaSet=rs0
      - PERFORMANCE_MONGO_URL=mongodb://performance:${PERFORMANCE_MONGODB_PASSWORD}@mongo1/performance?replicaSet=rs0
      - APPLICATION_CONFIG_MONGO_URL=mongodb://config:${CONFIG_MONGODB_PASSWORD}@mongo1/application-config?replicaSet=rs0
      - HEARTH_MONGO_URL=mongodb://hearth:${HEARTH_MONGODB_PASSWORD}@mongo1/hearth-dev?replicaSet=rs0
      - OPENHIM_MONGO_URL=mongodb://openhim:${OPENHIM_MONGODB_PASSWORD}@mongo1/openhim-dev?replicaSet=rs0
      - ES_HOST=search-user:${ROTATING_SEARCH_ELASTIC_PASSWORD}@elasticsearch:9200
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_BUCKET=ocrvs
      - SUPER_USER_PASSWORD=${SUPER_USER_PASSWORD}
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'migration'
  # Configure other dependencies with deployment specifc details
  hearth:
    environment:
      - mongodb__url=mongodb://hearth:${HEARTH_MONGODB_PASSWORD}@mongo1/hearth-dev?replicaSet=rs0
      - logger__level=warn
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
    secrets:
      - jwt-public-key.{{ts}}
    configs:
      - source: hearth-check-dupe-plugin.{{ts}}
        target: /src/hearth/lib/plugins/checkDuplicateTask.js
      - source: hearth-queryparam-extensions-conf.{{ts}}
        target: /src/hearth/config/queryparam-extensions.json
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'hearth'

  webhooks:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - MONGO_URL=mongodb://webhooks:${WEBHOOKS_MONGODB_PASSWORD}@mongo1/webhooks?replicaSet=rs0
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.webhooks.rule=Host(`webhooks.{{hostname}}`)'
        - 'traefik.http.services.webhooks.loadbalancer.server.port=2525'
        - 'traefik.http.routers.webhooks.tls=true'
        - 'traefik.http.routers.webhooks.tls.certresolver=certResolver'
        - 'traefik.http.routers.webhooks.entrypoints=web,websecure'
        - 'traefik.docker.network=opencrvs_overlay_net'
        - 'traefik.http.middlewares.webhooks.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.webhooks.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.webhooks.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.webhooks.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.webhooks.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.webhooks.headers.stspreload=true'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'webhooks'

  dashboards:
    volumes:
      # Exceed Docker config file 500 kb file limit, thus a volume mount
      - /opt/opencrvs/infrastructure/metabase/metabase.init.db.sql:/metabase.init.db.sql
    networks:
      - overlay_net
    environment:
      # Note that only mongo1 is used here on purpose for all environments
      # https://discourse.metabase.com/t/solved-add-mongodb-replicaset-database/7404/2
      - OPENCRVS_METABASE_DB_HOST=mongo1
      - OPENCRVS_METABASE_DB_USER=performance
      - OPENCRVS_METABASE_DB_PASS=${PERFORMANCE_MONGODB_PASSWORD}
      - OPENCRVS_METABASE_DB_AUTH_DB=performance
      - OPENCRVS_METABASE_SITE_NAME=OpenCRVS Dashboards
      - OPENCRVS_METABASE_SITE_URL=http://metabase.{{hostname}}
      - OPENCRVS_METABASE_MAP_NAME=Farajaland
      - OPENCRVS_METABASE_MAP_URL=http://countryconfig:3040/content/map.geojson
      - OPENCRVS_METABASE_MAP_REGION_KEY=State
      - OPENCRVS_METABASE_MAP_REGION_NAME=State
      - OPENCRVS_METABASE_ADMIN_EMAIL=${OPENCRVS_METABASE_ADMIN_EMAIL}
      - OPENCRVS_METABASE_ADMIN_PASSWORD=${OPENCRVS_METABASE_ADMIN_PASSWORD}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.metabase.rule=Host(`metabase.{{hostname}}`)'
        - 'traefik.http.services.metabase.loadbalancer.server.port=4444'
        - 'traefik.http.routers.metabase.tls=true'
        - 'traefik.http.routers.metabase.tls.certresolver=certResolver'
        - 'traefik.http.routers.metabase.entrypoints=web,websecure'
        - 'traefik.docker.network=opencrvs_overlay_net'
        - 'traefik.http.middlewares.metabase.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.metabase.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.metabase.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.metabase.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.metabase.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.metabase.headers.stspreload=true'
      replicas: 1
      placement:
        constraints:
          - node.labels.data1 == true
secrets:
  jwt-public-key.{{ts}}:
    external: true
  jwt-private-key.{{ts}}:
    external: true
configs:
  hearth-check-dupe-plugin.{{ts}}:
    file: /opt/opencrvs/infrastructure/hearth-plugins/checkDuplicateTask.js
  hearth-queryparam-extensions-conf.{{ts}}:
    file: /opt/opencrvs/infrastructure/hearth-queryparam-extensions.json
  metricbeat-conf.{{ts}}:
    file: /opt/opencrvs/infrastructure/monitoring/beats/metricbeat.yml
  filebeat.{{ts}}:
    file: /opt/opencrvs/infrastructure/monitoring/filebeat/filebeat.yml
  mongo-on-deploy.{{ts}}:
    file: /opt/opencrvs/infrastructure/mongodb/on-deploy.sh
  beat-rollover-policy.{{ts}}:
    file: /opt/opencrvs/infrastructure/monitoring/beats/rollover-policy.json
  kibana.{{ts}}:
    file: /opt/opencrvs/infrastructure/monitoring/kibana/kibana.yml
  apm.{{ts}}:
    file: /opt/opencrvs/infrastructure/monitoring/apm/apm-server.yml
  logstash.{{ts}}:
    file: /opt/opencrvs/infrastructure/monitoring/logstash/logstash.yml
  logstash-pipeline.{{ts}}:
    file: /opt/opencrvs/infrastructure/monitoring/logstash/logstash.conf
  influxdb-conf.{{ts}}:
    file: /opt/opencrvs/infrastructure/influxdb.conf
  jvm-options.{{ts}}:
    file: /opt/opencrvs/infrastructure/elasticsearch/jvm.options
  minio-mc-config.{{ts}}:
    file: /opt/opencrvs/infrastructure/mc-config/config.json
networks:
  overlay_net:
    driver: overlay
    attachable: true
