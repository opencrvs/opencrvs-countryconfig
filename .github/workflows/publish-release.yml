name: Publish release

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: Branch to build from
        default: master
        required: true

      release_version:
        description: Release tag. It will be prepended by your repository name (e.g. v1.5.3 or 20240501)
        required: true

jobs:
  base:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: '${{ github.event.inputs.branch_name }}'

      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Set TAG environment variable
        run: echo "TAG=${{ github.event.inputs.release_version }}" >> $GITHUB_ENV

      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: euanmillar,rikukissa
          minimum-approvals: 1
          issue-title: 'Release: ${{ env.TAG }}'
          issue-body: 'Please approve or deny the publishing of release: ${{ env.TAG }} to Dockerhub'
          exclude-workflow-initiator-as-approver: false

      - name: Push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ${{ github.event.repository.name }}-
          custom_tag: ${{ env.TAG }}
          release_branches: ${{ github.event.inputs.branch_name }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push image
        env:
          DOCKERHUB_ACCOUNT: ${{ secrets.DOCKERHUB_ACCOUNT }}
          DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_REPO }}
        run: |
          export COUNTRY_CONFIG_VERSION=${{ env.TAG }}
          echo "Publishing a Docker image with a tag $COUNTRY_CONFIG_VERSION"
          bash build-and-push.sh && unset COUNTRY_CONFIG_VERSION

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.TAG }}
          name: Release ${{ env.TAG }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Merge ${{ github.event.inputs.branch_name }} -> master
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: ${{ github.event.inputs.branch_name }}
          target_branch: master
          message: Merge ${{ github.event.inputs.branch_name }} to master
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge master -> develop
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: master
          target_branch: develop
          message: Merge master back to develop
          github_token: ${{ secrets.GITHUB_TOKEN }}
